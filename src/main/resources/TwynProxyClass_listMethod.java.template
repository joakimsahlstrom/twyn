	@Override
	public List<COMPONENT_TYPE> METHOD_NAME() {
		return cache.get("FIELD_NAME", () -> {
			try {
				JsonNode node = jsonNode.get(FIELD_ID);
				if (node == null) {
					return Collections.<COMPONENT_TYPE>emptyList();
				}
				Require.that(node.isArray(), ErrorFactory.proxyCollectionJsonNotArrayType("DECLARING_CLASS.METHOD_NAME", COMPONENT_TYPE.class.getSimpleName(), jsonNode));
				return collect(COMPONENT_TYPE.class, node, Collectors.toList());
			} catch (RuntimeException e) {
				throw e;
			} catch (Exception e) {
				throw new RuntimeException(e);
			}
		});
	}