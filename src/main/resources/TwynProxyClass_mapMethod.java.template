	@Override
	public Map<String, COMPONENT_TYPE> METHOD_NAME() {
		return cache.get("FIELD_NAME", () -> {
			try {
				JsonNode node = jsonNode.get(FIELD_ID);
				if (node == null) {
					return Collections.<String, COMPONENT_TYPE>emptyMap();
				}
				Require.that(node.isContainerNode(), ErrorFactory.innerMapProxyNoMapStructure("DECLARING_CLASS.METHOD_NAME", "Map<String, COMPONENT_TYPE>", jsonNode)); 
			
				return StreamSupport
					.stream(Spliterators.spliteratorUnknownSize(node.fields(), 0), false)
					.collect(Collectors.toMap(Entry::getKey, (entry) -> twyn.proxy(entry.getValue(), COMPONENT_TYPE.class)));
			} catch (RuntimeException e) {
				throw e;
			} catch (Exception e) {
				throw new RuntimeException(e);
			}
		});
	}