    @Override
    public Optional<RETURN_TYPE> METHOD_NAME() {
        return cache.get("" + FIELD_ID, () -> {
            Node node = resolve(this.node, FIELD_ID);
            if (node == null) {
                return Optional.<RETURN_TYPE>empty();
            } else {
                Require.that(node.isContainerNode(), ErrorFactory.innerProxyNoStruct("DECLARING_CLASS.METHOD_NAME", RETURN_TYPE.class.getSimpleName(), node));
                try {
                    return Optional.of(twyn.proxy(node, RETURN_TYPE.class));
                } catch (RuntimeException e) {
                    throw e;
                } catch (Exception e) {
                    throw new RuntimeException(e);
                }
            }
        });
    }